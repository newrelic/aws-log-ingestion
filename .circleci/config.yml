version: 2
jobs:
  build:
    docker:
      - image: circleci/python:3.7
    environment:
      PIPENV_VENV_IN_PROJECT: true
    steps:
      - checkout
      - run: sudo chown -R circleci:circleci /usr/local/bin
      - run: sudo chown -R circleci:circleci /usr/local/lib/python3.7/site-packages
      - restore_cache:
          key: deps-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
      - run:
          command: |
            sudo pip install pipenv
            pipenv install --dev --deploy
      - save_cache:
          key: deps-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
          paths:
            - ".venv"
            - "/usr/local/bin"
            - "/usr/local/lib/python3.7/site-packages"

  lint:
    docker:
      - image: circleci/python:3.7
    environment:
      PIPENV_VENV_IN_PROJECT: true
    steps:
      - checkout
      - run: sudo chown -R circleci:circleci /usr/local/bin
      - run: sudo chown -R circleci:circleci /usr/local/lib/python3.7/site-packages
      - restore_cache:
          key: deps-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
      - run:
          command: |
            pipenv run flake8 src test
            pipenv run black --check src test

  test:
    docker:
      - image: circleci/python:3.7
    environment:
      PIPENV_VENV_IN_PROJECT: true
    steps:
      - checkout
      - run: sudo chown -R circleci:circleci /usr/local/bin
      - run: sudo chown -R circleci:circleci /usr/local/lib/python3.7/site-packages
      - restore_cache:
          key: deps-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
      - run:
          command: pipenv run pytest

  release:
    docker:
      - image: circleci/python:3.7
    environment:
      PIPENV_VENV_IN_PROJECT: true
    steps:
      - checkout
      - run: sudo chown -R circleci:circleci /usr/local/bin
      - run: sudo chown -R circleci:circleci /usr/local/lib/python3.6/site-packages
      - run:
          name: Install release dependencies
          command: |
            sudo pip install -q -U aws-sam-cli
            pipenv lock --requirements --keep-outdated > ./src/requirements.txt
            sam validate
            sam build
            sam package --s3-bucket nr-serverless-applications --output-template-file packaged.yaml
            sam publish --region us-east-1 --template packaged.yaml

workflows:
  version: 2
  build-all:
    jobs:
      - build:
          filters:
            branches:
              only: /.*/
            tags:
              only: /.*/
      - lint:
          requires:
            - build
          filters:
            branches:
              only: /.*/
            tags:
              only: /.*/
      - test:
          requires:
            - build
          filters:
            branches:
              only: /.*/
            tags:
              only: /.*/
      - release:
          requires:
            - build
            - lint
            - test
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
